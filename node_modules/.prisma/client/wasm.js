
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.TouristScalarFieldEnum = {
  id: 'id',
  uniqueId: 'uniqueId',
  email: 'email',
  mobile: 'mobile',
  passwordHash: 'passwordHash',
  fullName: 'fullName',
  aadhaarNumber: 'aadhaarNumber',
  emergencyDetails: 'emergencyDetails',
  companionsCount: 'companionsCount',
  gender: 'gender',
  language: 'language',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AdminScalarFieldEnum = {
  id: 'id',
  email: 'email',
  passwordHash: 'passwordHash',
  name: 'name',
  role: 'role',
  createdAt: 'createdAt'
};

exports.Prisma.TourPlanScalarFieldEnum = {
  id: 'id',
  touristId: 'touristId',
  startDate: 'startDate',
  endDate: 'endDate',
  locationName: 'locationName',
  latitude: 'latitude',
  longitude: 'longitude',
  geofenceRadiusMeters: 'geofenceRadiusMeters',
  createdAt: 'createdAt'
};

exports.Prisma.LocationPingScalarFieldEnum = {
  id: 'id',
  touristId: 'touristId',
  latitude: 'latitude',
  longitude: 'longitude',
  speedKmh: 'speedKmh',
  createdAt: 'createdAt'
};

exports.Prisma.AlertScalarFieldEnum = {
  id: 'id',
  touristId: 'touristId',
  type: 'type',
  message: 'message',
  resolved: 'resolved',
  createdAt: 'createdAt'
};

exports.Prisma.ExpenditureScalarFieldEnum = {
  id: 'id',
  touristId: 'touristId',
  item: 'item',
  amount: 'amount',
  createdAt: 'createdAt'
};

exports.Prisma.SafetyScoreScalarFieldEnum = {
  id: 'id',
  touristId: 'touristId',
  score: 'score',
  reason: 'reason',
  createdAt: 'createdAt'
};

exports.Prisma.LedgerBlockScalarFieldEnum = {
  id: 'id',
  index: 'index',
  prevHash: 'prevHash',
  dataJson: 'dataJson',
  dataHash: 'dataHash',
  timestamp: 'timestamp'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Tourist: 'Tourist',
  Admin: 'Admin',
  TourPlan: 'TourPlan',
  LocationPing: 'LocationPing',
  Alert: 'Alert',
  Expenditure: 'Expenditure',
  SafetyScore: 'SafetyScore',
  LedgerBlock: 'LedgerBlock'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\Hackathon\\Smart-Tourist-TB\\server\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\Hackathon\\Smart-Tourist-TB\\server\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Tourist {\n  id               Int      @id @default(autoincrement())\n  uniqueId         String   @unique\n  email            String   @unique\n  mobile           String?\n  passwordHash     String\n  fullName         String\n  aadhaarNumber    String?\n  emergencyDetails Json?\n  companionsCount  Int      @default(0)\n  gender           String?\n  language         String?  @default(\"en\")\n  createdAt        DateTime @default(now())\n  updatedAt        DateTime @updatedAt\n\n  tourPlans    TourPlan[]\n  pings        LocationPing[]\n  alerts       Alert[]\n  expenditures Expenditure[]\n  safetyScores SafetyScore[]\n}\n\nmodel Admin {\n  id           Int      @id @default(autoincrement())\n  email        String   @unique\n  passwordHash String\n  name         String\n  role         String   @default(\"ADMIN\")\n  createdAt    DateTime @default(now())\n}\n\nmodel TourPlan {\n  id                   Int      @id @default(autoincrement())\n  touristId            Int\n  tourist              Tourist  @relation(fields: [touristId], references: [id])\n  startDate            DateTime\n  endDate              DateTime\n  locationName         String\n  latitude             Float\n  longitude            Float\n  geofenceRadiusMeters Int      @default(1000)\n  createdAt            DateTime @default(now())\n}\n\nmodel LocationPing {\n  id        Int      @id @default(autoincrement())\n  touristId Int\n  tourist   Tourist  @relation(fields: [touristId], references: [id])\n  latitude  Float\n  longitude Float\n  speedKmh  Float?\n  createdAt DateTime @default(now())\n}\n\nmodel Alert {\n  id        Int      @id @default(autoincrement())\n  touristId Int\n  tourist   Tourist  @relation(fields: [touristId], references: [id])\n  type      String\n  message   String?\n  resolved  Boolean  @default(false)\n  createdAt DateTime @default(now())\n}\n\nmodel Expenditure {\n  id        Int      @id @default(autoincrement())\n  touristId Int\n  tourist   Tourist  @relation(fields: [touristId], references: [id])\n  item      String\n  amount    Float\n  createdAt DateTime @default(now())\n}\n\nmodel SafetyScore {\n  id        Int      @id @default(autoincrement())\n  touristId Int\n  tourist   Tourist  @relation(fields: [touristId], references: [id])\n  score     Int\n  reason    String?\n  createdAt DateTime @default(now())\n}\n\nmodel LedgerBlock {\n  id        Int      @id @default(autoincrement())\n  index     Int      @unique\n  prevHash  String?\n  dataJson  String\n  dataHash  String\n  timestamp DateTime @default(now())\n}\n",
  "inlineSchemaHash": "61cb49efe7931804a3b43f1d06350cf0ad7211b7cb1c8a0cfe6d141a8b0974ae",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Tourist\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"uniqueId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mobile\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fullName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"aadhaarNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emergencyDetails\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"companionsCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"gender\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"language\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"tourPlans\",\"kind\":\"object\",\"type\":\"TourPlan\",\"relationName\":\"TourPlanToTourist\"},{\"name\":\"pings\",\"kind\":\"object\",\"type\":\"LocationPing\",\"relationName\":\"LocationPingToTourist\"},{\"name\":\"alerts\",\"kind\":\"object\",\"type\":\"Alert\",\"relationName\":\"AlertToTourist\"},{\"name\":\"expenditures\",\"kind\":\"object\",\"type\":\"Expenditure\",\"relationName\":\"ExpenditureToTourist\"},{\"name\":\"safetyScores\",\"kind\":\"object\",\"type\":\"SafetyScore\",\"relationName\":\"SafetyScoreToTourist\"}],\"dbName\":null},\"Admin\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"TourPlan\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"touristId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tourist\",\"kind\":\"object\",\"type\":\"Tourist\",\"relationName\":\"TourPlanToTourist\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"locationName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"geofenceRadiusMeters\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"LocationPing\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"touristId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tourist\",\"kind\":\"object\",\"type\":\"Tourist\",\"relationName\":\"LocationPingToTourist\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"speedKmh\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Alert\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"touristId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tourist\",\"kind\":\"object\",\"type\":\"Tourist\",\"relationName\":\"AlertToTourist\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resolved\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Expenditure\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"touristId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tourist\",\"kind\":\"object\",\"type\":\"Tourist\",\"relationName\":\"ExpenditureToTourist\"},{\"name\":\"item\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"SafetyScore\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"touristId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tourist\",\"kind\":\"object\",\"type\":\"Tourist\",\"relationName\":\"SafetyScoreToTourist\"},{\"name\":\"score\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"LedgerBlock\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"index\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"prevHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dataJson\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dataHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

